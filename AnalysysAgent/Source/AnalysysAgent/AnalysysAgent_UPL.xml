<root xmlns:android="http://schemas.android.com/apk/res/android">
    <resourceCopies>
    </resourceCopies>
    <buildGradleAdditions>
        <insert>
            dependencies {
                implementation('cn.com.analysys:analysys-arkanalysys:4.5.13')
            }
        </insert>
    </buildGradleAdditions>
    <androidManifestUpdates>
        <addPermission android:name="android.permission.INTERNET" />
        <addPermission android:name="android.permission.ACCESS_NETWORK_STATE" />
    </androidManifestUpdates>
    <gameActivityImportAdditions>
        <insert>
            import android.content.Context;
            import android.util.Log;
            import org.json.JSONException;
            import org.json.JSONObject;
            import java.util.HashMap;
            import java.util.Iterator;
            import java.util.Map;
            import com.analysys.*;
        </insert>
    </gameActivityImportAdditions>
    <gameActivityClassAdditions>
        <insert>
            public JSONObject stringToJson(String properties) {
                try {
                    return new JSONObject(properties);
                } catch(Exception e) {
                    e.printStackTrace();
                    return null;
                }
            }

            private static Map jsonToMap(JSONObject paramJSONObject) {
                Map map = new HashMap();
                Iterator iterator = paramJSONObject.keys();
                try {
                    while (iterator.hasNext()) {
                        String str = (String)iterator.next();
                        Object object = paramJSONObject.get(str);
                        map.put(str, object);
                    }
                } catch (JSONException jSONException) {
                    jSONException.printStackTrace();
                }
                return map;
            }

            private static String mapToString (Map paramMap) {
                String result = "";
                try {
                    if (paramMap != null) {
                        result = new JSONObject(paramMap).toString();
                    }
                } catch (Exception exception) {
                    exception.printStackTrace();
                }
                return result.toString();
            }

            public void initAnalysysAgent(String serverUrl, String appkey,String channel,int debugMode) {
                try {
                    AnalysysAgent.setDebugMode(GameActivity.this, 2);
                    AnalysysConfig config = new AnalysysConfig();
                    config.setAppKey(appkey);
                    config.setChannel(channel);
                    config.setAutoTrackClick(false);
                    AnalysysAgent.init(GameActivity.this, config);
                    AnalysysAgent.setDebugMode(GameActivity.this, debugMode);
                    AnalysysAgent.setUploadURL(GameActivity.this,serverUrl);
                }catch (Exception e) {
                    e.printStackTrace();
                }
            }    

            public String getDistinctId() {
                return AnalysysAgent.getDistinctId(GameActivity.this);
            }

            public void flush() {
                AnalysysAgent.flush(GameActivity.this);
            }

            public void alias(String aliasId) {
                AnalysysAgent.alias(GameActivity.this,aliasId);
            }

            public void identify(String param) {
                AnalysysAgent.identify(GameActivity.this,param);
            }

            public void reset() {
                AnalysysAgent.reset(GameActivity.this);
            }

            public void track(String eventName, String propertiesString) {
                JSONObject json = null;
                Map properties = null;
                try {
                    if (propertiesString != null) {
                        json = new JSONObject(propertiesString);
                    }
                    if (json != null) {
                        properties = jsonToMap(json);
                    }
                    AnalysysAgent.track(GameActivity.this, eventName,properties);
                }catch (Exception e) {
                    e.printStackTrace();
                }
            }

            public void pageView(String pageName, String propertiesString) {
                JSONObject json = null;
                Map properties = null;
                try {
                    if (propertiesString != null) {
                        json = new JSONObject(propertiesString);
                    }
                    if (json != null) {
                        properties = jsonToMap(json);
                    }
                    AnalysysAgent.pageView(GameActivity.this, pageName,properties);
                }catch (Exception e) {
                    e.printStackTrace();
                }
            }       

            public void registerSuperProperties(String propertiesString) {
                JSONObject json = null;
                Map properties = null;
                try {
                    if (propertiesString != null) {
                        json = new JSONObject(propertiesString);
                    }
                    if (json != null) {
                        properties = jsonToMap(json);
                    }
                    AnalysysAgent.registerSuperProperties(GameActivity.this,properties);
                }catch (Exception e) {
                    e.printStackTrace();
                }
            }     


            public void unRegisterSuperProperty(String param) {
                try {
                    AnalysysAgent.unRegisterSuperProperty(GameActivity.this,param);
                }catch (Exception e) {
                    e.printStackTrace();
                }
            }   

            public void clearSuperProperties() {
                try {
                    AnalysysAgent.clearSuperProperties(GameActivity.this);
                }catch (Exception e) {
                    e.printStackTrace();
                }
            }


            public void profileSet(String propertiesString) {
                JSONObject json = null;
                Map properties = null;
                try {
                    if (propertiesString != null) {
                        json = new JSONObject(propertiesString);
                    }
                    if (json != null) {
                        properties = jsonToMap(json);
                    }
                    AnalysysAgent.profileSet(GameActivity.this,properties);
                }catch (Exception e) {
                    e.printStackTrace();
                }
            }

            public void profileSetOnce(String propertiesString) {
                JSONObject json = null;
                Map properties = null;
                try {
                    if (propertiesString != null) {
                        json = new JSONObject(propertiesString);
                    }
                    if (json != null) {
                        properties = jsonToMap(json);
                    }
                    AnalysysAgent.profileSetOnce(GameActivity.this,properties);
                }catch (Exception e) {
                    e.printStackTrace();
                }
            }


            public void profileIncrement(String propertiesString) {
                JSONObject json = null;
                Map properties = null;
                try {
                    if (propertiesString != null) {
                        json = new JSONObject(propertiesString);
                    }
                    if (json != null) {
                        properties = jsonToMap(json);
                    }
                    AnalysysAgent.profileIncrement(GameActivity.this,properties);
                }catch (Exception e) {
                    e.printStackTrace();
                }
            }

            public void profileAppend(String propertiesString) {
                JSONObject json = null;
                Map properties = null;
                try {
                    if (propertiesString != null) {
                        json = new JSONObject(propertiesString);
                    }
                    if (json != null) {
                        properties = jsonToMap(json);
                    }
                    AnalysysAgent.profileAppend(GameActivity.this,properties);
                }catch (Exception e) {
                    e.printStackTrace();
                }
            }

            public void profileUnset(String param) {
                try {
                    AnalysysAgent.profileUnset(GameActivity.this,param);
                }catch (Exception e) {
                    e.printStackTrace();
                }
            }   

            public void profileDelete() {
                try {
                    AnalysysAgent.profileDelete(GameActivity.this);
                }catch (Exception e) {
                    e.printStackTrace();
                }
            }   
                  
        </insert>
    </gameActivityClassAdditions>
</root>

